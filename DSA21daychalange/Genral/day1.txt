/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    
  let dummyNode = new ListNode(-1)  // extra space  sc O(n)
  let tail = dummyNode;
    
    while(list1 != null && list2 != null){ // tc O(n)
        if(list1.val <= list2.val){
            tail.next = list1;
            list1 = list1.next;
        }else {
            tail.next = list2;
            list2 = list2.next;
        }
        tail = tail.next;
        tail.next = null;
    }
    
    list1 != null ? tail.next = list1 :tail.next = list2
    
    
    head = dummyNode.next;
    return head;
};


